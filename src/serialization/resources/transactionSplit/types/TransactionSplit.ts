/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Venice } from "@fern-api/venice";
import * as core from "../../../../core";

export const TransactionSplit: core.serialization.ObjectSchema<
    serializers.TransactionSplit.Raw,
    Venice.TransactionSplit
> = core.serialization.object({
    transactionId: core.serialization.property("transaction_id", core.serialization.string().optional()),
    key: core.serialization.string().optional(),
    amountQuantity: core.serialization.property("amount_quantity", core.serialization.string().optional()),
    amountUnit: core.serialization.property("amount_unit", core.serialization.string().optional()),
    accountId: core.serialization.property("account_id", core.serialization.string().optional()),
    data: core.serialization.unknown().optional(),
    updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
});

export declare namespace TransactionSplit {
    interface Raw {
        transaction_id?: string | null;
        key?: string | null;
        amount_quantity?: string | null;
        amount_unit?: string | null;
        account_id?: string | null;
        data?: unknown | null;
        updated_at?: string | null;
        created_at?: string | null;
    }
}
