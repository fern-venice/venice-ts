/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Venice } from "@fern-api/venice";
import * as core from "../../../../core";

export const Resource: core.serialization.ObjectSchema<serializers.Resource.Raw, Venice.Resource> =
    core.serialization.object({
        id: core.serialization.string(),
        creatorId: core.serialization.property("creator_id", core.serialization.string().optional()),
        integrationId: core.serialization.property("integration_id", core.serialization.string().optional()),
        institutionId: core.serialization.property("institution_id", core.serialization.string().optional()),
        envName: core.serialization.property("env_name", core.serialization.string().optional()),
        settings: core.serialization.unknown(),
        createdAt: core.serialization.property("created_at", core.serialization.string()),
        updatedAt: core.serialization.property("updated_at", core.serialization.string()),
        providerName: core.serialization.property("provider_name", core.serialization.string()),
        displayName: core.serialization.property("display_name", core.serialization.string().optional()),
    });

export declare namespace Resource {
    interface Raw {
        id: string;
        creator_id?: string | null;
        integration_id?: string | null;
        institution_id?: string | null;
        env_name?: string | null;
        settings?: unknown;
        created_at: string;
        updated_at: string;
        provider_name: string;
        display_name?: string | null;
    }
}
