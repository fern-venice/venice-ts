/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Venice } from "@fern-api/venice";
import * as core from "../../../../core";

export const Pipeline: core.serialization.ObjectSchema<serializers.Pipeline.Raw, Venice.Pipeline> =
    core.serialization.object({
        id: core.serialization.string(),
        sourceId: core.serialization.property("source_id", core.serialization.string().optional()),
        sourceState: core.serialization.property("source_state", core.serialization.unknown()),
        destinationId: core.serialization.property("destination_id", core.serialization.string().optional()),
        destinationState: core.serialization.property("destination_state", core.serialization.unknown()),
        linkOptions: core.serialization.property("link_options", core.serialization.unknown()),
        createdAt: core.serialization.property("created_at", core.serialization.string()),
        updatedAt: core.serialization.property("updated_at", core.serialization.string()),
        lastSyncStartedAt: core.serialization.property("last_sync_started_at", core.serialization.string().optional()),
        lastSyncCompletedAt: core.serialization.property(
            "last_sync_completed_at",
            core.serialization.string().optional()
        ),
    });

export declare namespace Pipeline {
    interface Raw {
        id: string;
        source_id?: string | null;
        source_state?: unknown;
        destination_id?: string | null;
        destination_state?: unknown;
        link_options?: unknown;
        created_at: string;
        updated_at: string;
        last_sync_started_at?: string | null;
        last_sync_completed_at?: string | null;
    }
}
