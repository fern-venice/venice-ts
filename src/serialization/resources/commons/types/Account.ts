/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Venice } from "@fern-api/venice";
import * as core from "../../../../core";

export const Account: core.serialization.ObjectSchema<serializers.Account.Raw, Venice.Account> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        type: core.serialization.string().optional(),
        lastFour: core.serialization.property("last_four", core.serialization.string().optional()),
        institutionName: core.serialization.property("institution_name", core.serialization.string().optional()),
        defaultUnit: core.serialization.property("default_unit", core.serialization.string().optional()),
        currentBalance: core.serialization.property("current_balance", core.serialization.number().optional()),
        availableBalance: core.serialization.property("available_balance", core.serialization.number().optional()),
        external: core.serialization.unknown().optional(),
        updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    });

export declare namespace Account {
    interface Raw {
        id?: string | null;
        name?: string | null;
        type?: string | null;
        last_four?: string | null;
        institution_name?: string | null;
        default_unit?: string | null;
        current_balance?: number | null;
        available_balance?: number | null;
        external?: unknown | null;
        updated_at?: string | null;
        created_at?: string | null;
    }
}
