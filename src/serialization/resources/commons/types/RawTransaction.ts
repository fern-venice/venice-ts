/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Venice } from "@fern-api/venice";
import * as core from "../../../../core";

export const RawTransaction: core.serialization.ObjectSchema<serializers.RawTransaction.Raw, Venice.RawTransaction> =
    core.serialization.object({
        id: core.serialization.string(),
        sourceId: core.serialization.property("source_id", core.serialization.string().optional()),
        standard: core.serialization.unknown(),
        external: core.serialization.unknown(),
        createdAt: core.serialization.property("created_at", core.serialization.string()),
        updatedAt: core.serialization.property("updated_at", core.serialization.string()),
        providerName: core.serialization.property("provider_name", core.serialization.string()),
        ledgerResourceId: core.serialization.property("ledger_resource_id", core.serialization.string().optional()),
    });

export declare namespace RawTransaction {
    interface Raw {
        id: string;
        source_id?: string | null;
        standard?: unknown;
        external?: unknown;
        created_at: string;
        updated_at: string;
        provider_name: string;
        ledger_resource_id?: string | null;
    }
}
